trigger:
- master

variables:
  TEST_RUNNER_IMAGE: freeipa-fedora-builder:latest
  TEST_RUNNER_CONFIG: .test_runner_azure.yaml
  PEP8_ERROR_LOG: pycodestyle_errors.log
  CI_RESULTS_LOG: ci_results_$(System.PullRequest.PullRequestNumber).log
  CI_BACKLOG_SIZE: 5000
  CI_RUNNER_LOGS_DIR: /tmp/test-runner-logs
  CI_RUNNER_LOG_ARCHIVE: freeipa-ci-pr-$(System.PullRequest.PullRequestNumber)-job-$(Build.BuildId).tar.gz
  TRAVIS_EVENT_TYPE: $(Build.Reason)
  TRAVIS_BRANCH: $(System.PullRequest.TargetBranch)
  TRAVIS_BUILD_DIR: $(Build.Repository.LocalPath)
  builddir: /__w/1/s

jobs:
- job: Build
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    EXT_VOLUME: $(Build.Repository.LocalPath)
    BUILD_HOSTNAME: container-$(System.PullRequest.PullRequestNumber).build.ipa.cool
    make_target: rpms
  container:
    image: registry.fedoraproject.org/f30/fedora-toolbox
    options: --cap-add=SYS_PTRACE --security-opt seccomp=unconfined --privileged
  steps:
    - script: |
        sudo rm -rf /var/cache/dnf/*
        cd '$(builddir)'
        echo 'Disable modular repositories'
        sudo dnf config-manager '*modular*' --set-disabled
        sudo dnf makecache || :
        echo "Installing base development environment"
        sudo dnf install -y gdb make autoconf rpm-build gettext-devel automake libtool 'nodejs(abi) < 11' docker || :
        echo "Installing FreeIPA development dependencies"
        sudo dnf builddep -y --skip-broken -D "with_wheels 1" --spec freeipa.spec.in --best --allowerasing --setopt=install_weak_deps=False || :
        echo "Running autoconf generator"
        ./autogen.sh
        echo "Running make target '$(make_target)'"
        make V=0 $(make_target) LOG_COMPILE='gdb -return-child-result -ex run -ex "thread apply all bt" -ex "quit" --args'
      displayName: Build packages
    - script: |
        cd '$(builddir)'
        mkdir container
        cp -pr dist container/
        cp ipatests/azure/Dockerfile.build-container container/Dockerfile
        cd container
        docker build -t freeipa-fedora-builder .
        docker save freeipa-fedora-builder | gzip > '$(builddir)/freeipa-fedora-builder-container.tar.gz'
      displayName: Create container image for test
    - task: PublishPipelineArtifact@0
      displayName: Publish packages
      inputs:
        artifactName: 'packages-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
        targetPath: $(Agent.BuildDirectory)/s/dist
      condition: always()
    - task: PublishPipelineArtifact@0
      displayName: Publish container image
      inputs:
        artifactName: 'image-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
        targetPath: $(Agent.BuildDirectory)/s/freeipa-fedora-builder-container.tar.gz
      condition: always()
- job: Test
  dependsOn: Build
  condition: succeeded()
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
        lint:
          TASK_TO_RUN: lint
        webUI:
          TASK_TO_RUN: webui-unit
        XMLRPC_Tests:
          TASK_TO_RUN: run-tests
          PYTHON: /usr/bin/python3
          TESTS_TO_RUN: "test_cmdline
                test_install
                test_ipaclient
                test_ipalib
                test_ipaplatform
                test_ipapython
                test_ipaserver
                test_xmlrpc/test_*.py"
        Tox:
          TASK_TO_RUN: tox
  steps:
    - script: |
        echo '{ "ipv6": true, "fixed-cidr-v6": "2001:db8::/64" }' > docker-daemon.json
        sudo cp docker-daemon.json /etc/docker/daemon.json
        sudo chown root:root /etc/docker/daemon.json
        sudo systemctl restart docker
      displayName: Configure docker to allow IPv6 network
    - task: UsePythonVersion@0
      inputs:
        versionSpec: 3.6
        architecture: 'x64'
    - script: |
        python3 -m pip install --upgrade pip setuptools pycodestyle
      displayName: 'Install prerequisites'
    - script: |
        pip3 install git+https://github.com/abbra/ipa-docker-test-runner@py3-fixes
        mkdir -p $(CI_RUNNER_LOGS_DIR)
      displayName: Install ipa-docker-test-runner
    - task: DownloadPipelineArtifact@0
      displayName: Download prebuilt packages
      inputs:
        artifactName: 'packages-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
        targetPath: $(Agent.BuildDirectory)/s/dist
    - task: DownloadPipelineArtifact@0
      displayName: Download pre-built container
      inputs:
        artifactName: 'image-$(Build.BuildId)-$(Agent.OS)-$(Agent.OSArchitecture)'
        targetPath: $(Agent.BuildDirectory)/s
    - script: |
        docker load --input $(Agent.BuildDirectory)/s/freeipa-fedora-builder-container.tar.gz
        docker images
        docker inspect freeipa-fedora-builder:latest
      displayName: Import pre-built container to the engine
    - script: |
        PYTHONFAULTHANDLER=1 ./.travis_run_task.sh
      displayName: Test FreeIPA
    - task: PublishPipelineArtifact@0
      displayName: Publish logs
      inputs:
        artifactName: '$(CI_RUNNER_LOG_ARCHIVE)'
        targetPath: $(CI_RUNNER_LOGS_DIR)
      condition: always()
